$fn = 48;

polyhedron(points = [[-14.6088364060, 11.9224002258, 95.2417413936], [-74.2194118880, -20.8499445172, 95.2417414959], [-43.9609988186, -58.6307821971, 95.2417413475], [-14.6088364249, 11.9224002602, 95.2417411998], [-63.2480040173, 64.0665518239, 95.2417407722], [-74.2194118691, -20.8499445516, 95.2417416897], [-74.2194114174, -20.8499446100, 95.2417412195], [-63.2480044689, 64.0665518822, 95.2417412424], [-126.6439338638, -8.7789811191, 95.2417411296], [-63.2480044770, 64.0665518893, 95.2417409989], [-101.7219895454, 64.7633877809, 95.2417410805], [-126.6439338557, -8.7789811262, 95.2417413731], [-126.6439338684, -8.7789811219, 95.2417412063], [-101.7219895328, 64.7633877766, 95.2417412472], [-172.9770815927, 77.0799131810, 95.2417409907], [-190.4895839904, 29.1773577576, 95.2417406018], [-126.6439338535, -8.7789811139, 95.2417410336], [-172.9770816076, 77.0799131729, 95.2417411634], [-16.8746096108, 105.9689640491, 95.2417411069], [-63.2480040033, 64.0665518369, 95.2417407523], [-14.6088364388, 11.9224002472, 95.2417412198], [-16.8746092608, 105.9689636618, 95.2417412338], [-58.1030625580, 125.2051775413, 95.2417409887], [-63.2480043533, 64.0665522242, 95.2417406254], [-58.1030625016, 125.2051775365, 95.2417413592], [-86.5948734853, 94.6550600655, 95.2417406602], [-63.2480044097, 64.0665522289, 95.2417402549], [-14.6088364576, 11.9224002468, 95.2417404413], [28.7341095768, 90.0215326724, 95.2417423191], [-16.8746095920, 105.9689640496, 95.2417418854], [-14.6088364782, 11.9224002582, 95.2417402950], [50.2241971356, 47.4078749292, 95.2417412892], [28.7341095974, 90.0215326609, 95.2417424653], [68.4081270842, 100.3071232355, 95.2417414194], [28.7341089075, 90.0215323130, 95.2417419646], [50.2241978255, 47.4078752771, 95.2417417900], [50.2241979838, 47.4078752227, 95.2417420209], [107.4878814447, 102.4869977387, 95.2417416472], [68.4081269260, 100.3071232899, 95.2417411885], [45.4585852275, 127.4396164272, 95.2417416643], [-16.8746095061, 105.9689642950, 95.2417421168], [28.7341094910, 90.0215324269, 95.2417420877], [-16.8746094976, 105.9689642701, 95.2417419510], [45.4585852189, 127.4396164521, 95.2417418302], [-9.7653472230, 150.9053156530, 95.2417425214], [45.4585851488, 127.4396162872, 95.2417421631], [55.2944322450, 161.8221984817, 95.2417420022], [-9.7653471529, 150.9053158179, 95.2417421884], [80.2684495402, 145.3352136323, 95.2417433906], [55.2944322883, 161.8221984693, 95.2417420389], [45.4585851056, 127.4396162995, 95.2417421264], [-9.7653471507, 150.9053158050, 95.2417421221], [55.2944322429, 161.8221984945, 95.2417420685], [-1.2223906149, 206.6581190799, 95.2417423280], [55.2944322480, 161.8221985010, 95.2417421894], [70.7428632931, 226.5500057028, 95.2417423264], [-1.2223906201, 206.6581190734, 95.2417422071], [55.2944322765, 161.8221984942, 95.2417422562], [83.3382726879, 151.3787688998, 95.2417422802], [70.7428632646, 226.5500057096, 95.2417422596], [109.9311862339, 177.6990266252, 95.2417414302], [70.7428631521, 226.5500056907, 95.2417430262], [83.3382728004, 151.3787689186, 95.2417415136], [32.3471504785, 281.0381349234, 95.2417437199], [-1.2223905813, 206.6581189331, 95.2417430946], [70.7428632544, 226.5500058430, 95.2417414389], [67.4214933395, 278.5339081098, 95.2417418321], [32.3471504374, 281.0381348945, 95.2417418877], [70.7428632954, 226.5500058720, 95.2417432712], [32.3471504597, 281.0381349319, 95.2417430540], [-38.8682185102, 238.8207414098, 95.2417444918], [-1.2223905625, 206.6581189247, 95.2417437606], [-1.2223904532, 206.6581190551, 95.2417425142], [-51.1591042007, 145.2794948846, 95.2417423299], [-9.7653473125, 150.9053158298, 95.2417419359], [-49.5185257244, 217.5726028128, 95.2417420877], [-51.1591042808, 145.2794949497, 95.2417420307], [-1.2223903731, 206.6581189899, 95.2417428134], [38.9255295343, -28.8750927454, 95.2417418154], [-14.6088363780, 11.9224002142, 95.2417416042], [-43.9609988465, -58.6307821855, 95.2417411369], [-43.9609988430, -58.6307821952, 95.2417417036], [-0.5262010384, -67.3900668776, 95.2417416656], [38.9255295308, -28.8750927356, 95.2417412487], [-0.5262010462, -67.3900669159, 95.2417416647], [-43.9609988353, -58.6307821569, 95.2417417045], [-47.6763941053, -139.8460777401, 95.2417422734], [-47.6763940987, -139.8460777404, 95.2417418076], [-43.9609988418, -58.6307821566, 95.2417421702], [-86.6659088013, -117.6542381806, 95.2417415657], [-43.9609985330, -58.6307823801, 95.2417427341], [-90.3618240596, -44.8493946513, 95.2417406264], [-86.6659091102, -117.6542379572, 95.2417410018], [-86.4688732344, -182.3426316414, 95.2417424202], [-47.6763940127, -139.8460775892, 95.2417421262], [-86.6659088874, -117.6542383318, 95.2417412471], [-40.0794028212, -191.1481270104, 95.2417426151], [-47.6763939410, -139.8460776546, 95.2417417359], [-86.4688733061, -182.3426315760, 95.2417428105], [-66.1138319258, -230.1109411465, 95.2417436053], [-40.0794027101, -191.1481264248, 95.2417421543], [-86.4688734172, -182.3426321616, 95.2417432713], [-86.4688743334, -182.3426325520, 95.2417428703], [-93.7888910380, -236.7453784733, 95.2417438481], [-66.1138310095, -230.1109407561, 95.2417440063], [-86.4688741202, -182.3426325807, 95.2417435160], [-131.5881672388, -220.7155778484, 95.2417433701], [-93.7888912513, -236.7453784446, 95.2417432024], [-128.7781421482, -153.8598592444, 95.2417430557], [-131.5881673511, -220.7155777163, 95.2417429572], [-86.4688740078, -182.3426327128, 95.2417439289], [-131.5881674490, -220.7155777122, 95.2417425442], [-128.7781420504, -153.8598592485, 95.2417434686], [-188.1764257643, -211.5294438245, 95.2417414298], [-107.7271509711, -272.0532484542, 95.2417413855], [-131.5881674466, -220.7155776980, 95.2417415660], [-188.1764257666, -211.5294438387, 95.2417424080], [-188.1764256227, -211.5294436475, 95.2417419734], [-200.1086740274, -244.6066583098, 95.2417420133], [-107.7271511150, -272.0532486454, 95.2417418201], [-100.7696861773, -264.5376259570, 95.2417403938], [-93.7888910114, -236.7453778789, 95.2417418298], [-131.5881674787, -220.7155784141, 95.2417447427], [-131.5881675388, -220.7155784564, 95.2417432334], [-117.3711521029, -275.5132154311, 95.2417423967], [-100.7696861172, -264.5376259147, 95.2417419031], [-117.3711527786, -275.5132144092, 95.2417426352], [-44.6427436641, -313.4181081410, 95.2417399932], [-100.7696854416, -264.5376269366, 95.2417416646], [-44.6427439851, -313.4181087569, 95.2417409113], [-117.3711524576, -275.5132137933, 95.2417417170], [-55.1675477719, -349.1228100479, 95.2417413401], [-73.9842153505, -254.3553314774, 95.2417404903], [-100.7696855138, -264.5376270196, 95.2417402654], [-44.6427435919, -313.4181080580, 95.2417413924], [-47.6763938098, -139.8460776352, 95.2417416775], [-40.0794029524, -191.1481270298, 95.2417426736], [-3.0922257156, -151.9105367378, 95.2417418053], [-47.6763938044, -139.8460776150, 95.2417417279], [-3.0922257211, -151.9105367580, 95.2417417549], [16.6187719218, -82.0607345398, 95.2417411717], [-107.2541645324, -111.0339902121, 95.2417418540], [-86.4688726243, -182.3426316396, 95.2417421729], [-86.6659094975, -117.6542383337, 95.2417414944], [-141.2695556546, -69.3567557152, 95.2417419005], [-107.2541645577, -111.0339902906, 95.2417418244], [-86.6659094722, -117.6542382552, 95.2417415241], [38.9255295293, -28.8750927520, 95.2417416962], [49.5263421922, 48.6541307900, 95.2417416713], [-14.6088363730, 11.9224002208, 95.2417417233], [49.5263422010, 48.6541307888, 95.2417416877], [38.9255295205, -28.8750927507, 95.2417416799], [98.0557325432, -31.5169481829, 95.2417417304], [128.0356669360, 60.8658100523, 95.2417418543], [49.5263422019, 48.6541307893, 95.2417416457], [98.0557325424, -31.5169481834, 95.2417417725], [160.8013547953, 42.8006858953, 95.2417420271], [128.0356669500, 60.8658100477, 95.2417419329], [98.0557325284, -31.5169481789, 95.2417416939], [160.8013551599, 42.8006855874, 95.2417403399], [98.0557321638, -31.5169478710, 95.2417433811], [119.2527827535, -56.7879794275, 95.2417399771], [98.0557324655, -31.5169476180, 95.2417416087], [38.9884897454, -35.3144661602, 95.2417415321], [119.2527824518, -56.7879796806, 95.2417417494], [119.2527824509, -56.7879796840, 95.2417421316], [38.9884897463, -35.3144661568, 95.2417411499], [53.9164323860, -88.3898729533, 95.2417425638], [119.2527827397, -56.7879794217, 95.2417402638], [177.8273595115, 7.7410613996, 95.2417386081], [160.8013551737, 42.8006855817, 95.2417400532], [170.1591174516, -39.0063932446, 95.2417394888], [177.8273602463, 7.7410607326, 95.2417388137], [119.2527820049, -56.7879787548, 95.2417400582], [170.1591177265, -39.0063932897, 95.2417396972], [214.7360289592, -27.7604879195, 95.2417391345], [177.8273599714, 7.7410607777, 95.2417386053], [214.7360289024, -27.7604876945, 95.2417387878], [170.1591177833, -39.0063935147, 95.2417400439], [213.7502114652, -56.2025845825, 95.2417377268], [214.7360290190, -27.7604878573, 95.2417381255], [229.3243790710, 36.5552457165, 95.2417401225], [177.8273599115, 7.7410607155, 95.2417396143], [228.5178502775, 37.9515628594, 95.2417378190], [160.8013550746, 42.8006855336, 95.2417393700], [177.8273596107, 7.7410614478, 95.2417392913], [204.9905841924, 87.1792259259, 95.2417396238], [160.8013550714, 42.8006854889, 95.2417379834], [228.5178502807, 37.9515629040, 95.2417392056], [204.9905841245, 87.1792258935, 95.2417397298], [228.5178503486, 37.9515629365, 95.2417390996], [252.6935273488, 66.2558705700, 95.2417398254]], triangles = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14], [15, 16, 17], [18, 19, 20], [21, 22, 23], [24, 25, 26], [27, 28, 29], [30, 31, 32], [33, 34, 35], [36, 37, 38], [39, 40, 41], [42, 43, 44], [45, 46, 47], [48, 49, 50], [51, 52, 53], [54, 55, 56], [57, 58, 59], [60, 61, 62], [63, 64, 65], [66, 67, 68], [69, 70, 71], [72, 73, 74], [75, 76, 77], [78, 79, 80], [81, 82, 83], [84, 85, 86], [87, 88, 89], [90, 91, 92], [93, 94, 95], [96, 97, 98], [99, 100, 101], [102, 103, 104], [105, 106, 107], [108, 109, 110], [111, 112, 113], [114, 115, 116], [117, 118, 119], [120, 121, 122], [123, 124, 125], [126, 127, 128], [129, 130, 131], [132, 133, 134], [135, 136, 137], [138, 139, 140], [141, 142, 143], [144, 145, 146], [147, 148, 149], [150, 151, 152], [153, 154, 155], [156, 157, 158], [159, 160, 161], [162, 163, 164], [165, 166, 167], [168, 169, 170], [171, 172, 173], [174, 175, 176], [177, 178, 179], [180, 181, 182], [183, 184, 185], [186, 187, 188], [189, 190, 191]]);
/***********************************************
******      SolidPython code:      *************
************************************************
 
#! /usr/bin/env python
# -*- coding: UTF-8 -*-
from __future__ import division
import os
import sys
import re
import tree
import utilities
from numpy import array,cross
from tree import TriangleNode, parseArrayIntoTree, parseEdgeArrayIntoTree, cutTreeIntoPatches
from stl_reader import Reader
from graph2 import Graph,TreeNode,treeLength
from utilities import getMatrixArbitraryAxis
from dxf_writer import DXFWriter
from evolution import TreeWorld

# Assumes SolidPython is in site-packages or elsewhwere in sys.path
from solid import *
from solid.utils import *

SEGMENTS = 48

triangles = Reader.read("stl/rhino-quarter.stl")
g = Graph(triangles)
hFn = lambda e: g.defaultHeuristic(e)
msp = g.toMSPTree(hFn)
edge_rep = msp.makeEdgeRepresentation()

hFn = lambda e: -g.defaultHeuristic(e)
msp2 = g.toMSPTree(hFn)
edge_rep2 = msp2.makeEdgeRepresentation()

world = TreeWorld(g, [edge_rep, edge_rep2])
child1 = world.generateFittest()
print child1
tn = parseEdgeArrayIntoTree(g.nodes, child1)
print treeLength(msp,set()), "faces"
#tn = parseArrayIntoTree(g.nodes, array_rep)
tn.unfold()
v = tn.getAllChildVertices()
v2d = tn.getAllChildVertices2D()
tn.getAllChildTriangles()
kdtree = utilities.makeKDTree(tn.getAllChildTriangles())

intersects = tn.checkIntersection() # return nodes thats intersect
print len(intersects), "faces that intersects"
paths = world.paths_intersection(child1)
cutEdges = g.cutEdges(paths)
print "Edges to cut:", cutEdges
tns = cutTreeIntoPatches(tn,cutEdges)

#v_i = [ x.getTransformedVertices2D() for x in intersects ]
#v = reduce(lambda x,y: x+y, v_i)

#print [x.node for x in xs]
#print len(xs)


#array_rep = [19, 55, 115, 49, -1, 147, 55, 194, 230, 180, 14, 82, 8, 198, 157, 197, 196, 81, 254, 240, 148, 120, 26, 46, 181, 123, 210, 223, 125, 143, 52, 21, 107, 16, 212, 250, 125, 73, 196, 27, 75, 249, 167, 39, 57, 103, 166, 23, 207, 15, 3, 240, 178, 191, 33, 181, 111, 29, 184, 177, 7, 92, 118, 59, 15, 93, 129, 58, 199, 94, 97, 98, 40, 61, 143, 64, 234, 251, 75, 91, 32, 78, 186, 133, 76, 134, 90, 4, 187, 218, 51, 49, 218, 182, 106, 43, 176, 138, 121, 63, 216, 151, 36, 10, 149, 146, 47, 226, 198, 133, 66, 104, 103, 46, 162, 10, 113, 251, 25, 83, 114, 62, 11, 5, 114, 206, 120, 38, 245, 185, 159, 110, 238, 1, 189, 226, 87, 154, 142, 160, 96, 54, 44, 5, 233, 68, 74, 12, 242, 253, 54, 208, 222, 211, 33, 93, 124, 155, 127, 215, 137, 127, 168, 13, 50, 173, 19, 152, 2, 24, 230, 6, 248, 115, 195, 153, 222, 232, 170, 148, 51, 173, 52, 254, 34, 253, 171, 84, 203, 205, 153, 135, 8, 197, 128, 60, 246, 141, 4, 9, 108, 3, 140, 144, 79, 117, 221, 100, 45, 158, 214, 20, 32, 22, 175, 111, 76, 18, 182, 175, 119, 85, 190, 139, 163, 99, 151, 234, 22, 63, 8, 144, 177, 144, 76, 237, 113, 193, 239, 238, 19, 162, 26, 244, 174, 140, 235, 225, 172, 41, 249, 117, 84, 77, 18, 239]
#print array_rep
#tn = parseArrayIntoTree(g.nodes, array_rep)
#tn.unfold()
#v = tn.getAllChildVertices()

def assembly():
    a = polyhedron(
            points=v,
            triangles=[[x for x in range(y,y+3)] for y in range(0,len(v),3)])
    return a

def intersecting():
    a = polygon(
            points=v2d,
            paths=[[x for x in range(y,y+3)] for y in range(0,len(v),3)])
    return a

if __name__ == '__main__':
    a = assembly()
    #a = intersecting()
    scad_render_to_file(a,'unfold.scad', file_header='$fn = %s;' % SEGMENTS, include_orig_code=True)
    d = DXFWriter(v2d) 
    d.generate_file()
 
 
***********************************************/
                            
