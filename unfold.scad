$fn = 48;

polyhedron(points = [[-14.6088364060, 11.9224002258, 95.2417413936], [-74.2194118880, -20.8499445172, 95.2417414959], [-43.9609988186, -58.6307821971, 95.2417413475], [-14.6088364249, 11.9224002602, 95.2417411998], [-63.2480040173, 64.0665518239, 95.2417407722], [-74.2194118691, -20.8499445516, 95.2417416897], [-74.2194114174, -20.8499446100, 95.2417412195], [-63.2480044689, 64.0665518822, 95.2417412424], [-126.6439338638, -8.7789811191, 95.2417411296], [-63.2480044770, 64.0665518893, 95.2417409989], [-101.7219895454, 64.7633877809, 95.2417410805], [-126.6439338557, -8.7789811262, 95.2417413731], [-126.6439338684, -8.7789811219, 95.2417412063], [-101.7219895328, 64.7633877766, 95.2417412472], [-172.9770815927, 77.0799131810, 95.2417409907], [-190.4895839904, 29.1773577576, 95.2417406018], [-126.6439338535, -8.7789811139, 95.2417410336], [-172.9770816076, 77.0799131729, 95.2417411634], [-16.8746096108, 105.9689640491, 95.2417411069], [-63.2480040033, 64.0665518369, 95.2417407523], [-14.6088364388, 11.9224002472, 95.2417412198], [38.9255295343, -28.8750927454, 95.2417418154], [-14.6088363780, 11.9224002142, 95.2417416042], [-43.9609988465, -58.6307821855, 95.2417411369], [-43.9609988430, -58.6307821952, 95.2417417036], [-0.5262010384, -67.3900668776, 95.2417416656], [38.9255295308, -28.8750927356, 95.2417412487], [58.4975517449, -109.6241145972, 95.2417417320], [38.9255301105, -28.8750933294, 95.2417407502], [-0.5262016181, -67.3900662838, 95.2417421641], [32.0263045712, -147.4734512895, 95.2417422126], [58.4975517645, -109.6241145698, 95.2417422396], [-0.5262016377, -67.3900663112, 95.2417416565], [32.0263045884, -147.4734513015, 95.2417421622], [82.8640214293, -157.7272841738, 95.2417431583], [58.4975517473, -109.6241145578, 95.2417422900], [82.8640214555, -157.7272840438, 95.2417430999], [32.0263045621, -147.4734514315, 95.2417422207], [58.8462369224, -198.3802759119, 95.2417432952], [110.6869270341, -195.4337597393, 95.2417440900], [82.8640209424, -157.7272837406, 95.2417426391], [58.8462374355, -198.3802762151, 95.2417437561], [58.8462374920, -198.3802772094, 95.2417433550], [107.5413382005, -223.7185600108, 95.2417443329], [110.6869269776, -195.4337587450, 95.2417444911], [58.8462375914, -198.3802770185, 95.2417440007], [79.6410868393, -253.8402426225, 95.2417438548], [107.5413381012, -223.7185602017, 95.2417436872], [131.3184018499, -239.7120513489, 95.2417408786], [107.5413376504, -223.7185597842, 95.2417423145], [79.6410872901, -253.8402430401, 95.2417452275], [126.6148927119, -171.8493444715, 95.2417432670], [82.8640206010, -157.7272839925, 95.2417445231], [110.6869273755, -195.4337594874, 95.2417422060], [58.8462370082, -198.3802758667, 95.2417429049], [32.0263044763, -147.4734514768, 95.2417426110], [-2.0744169633, -176.6247944490, 95.2417417319], [32.0263045893, -147.4734516090, 95.2417422924], [-43.1145694909, -116.4319078147, 95.2417426549], [-2.0744170763, -176.6247943168, 95.2417420505], [-43.1145691760, -116.4319076000, 95.2417432188], [-71.8171386799, -155.4078714899, 95.2417411112], [-2.0744173913, -176.6247945316, 95.2417414866], [-20.1424144055, -78.5427692685, 95.2417421495], [-43.1145694884, -116.4319078087, 95.2417421892], [32.0263045868, -147.4734516150, 95.2417427581], [-15.2853028239, -193.7471906146, 95.2417423388], [58.8462372134, -198.3802752921, 95.2417426576], [-2.0744171685, -176.6247950236, 95.2417419792], [-66.0292629716, -211.6102591371, 95.2417423852], [-15.2853027586, -193.7471906650, 95.2417423091], [-2.0744172338, -176.6247949733, 95.2417420088], [38.9255295293, -28.8750927520, 95.2417416962], [49.5263421922, 48.6541307900, 95.2417416713], [-14.6088363730, 11.9224002208, 95.2417417233], [49.5263422010, 48.6541307888, 95.2417416877], [38.9255295205, -28.8750927507, 95.2417416799], [98.0557325432, -31.5169481829, 95.2417417304], [98.0557325442, -31.5169481612, 95.2417417435], [38.9255295195, -28.8750927725, 95.2417416668], [116.3819536586, -58.9412003715, 95.2417418842], [168.5036507459, 35.5443267566, 95.2417404747], [98.0557322168, -31.5169483799, 95.2417435158], [116.3819539860, -58.9412001527, 95.2417401118], [168.5036504169, 35.5443271022, 95.2417421619], [137.8944313419, 57.0621038981, 95.2417420676], [98.0557325458, -31.5169487256, 95.2417418286], [168.5036504160, 35.5443271010, 95.2417420730], [209.6522689975, 82.7559147724, 95.2417436691], [137.8944313428, 57.0621038994, 95.2417421565], [137.8944313285, 57.0621039041, 95.2417419890], [58.5231242517, 53.4517308561, 95.2417417804], [98.0557325592, -31.5169487316, 95.2417419072], [58.5231242538, 53.4517308085, 95.2417420716], [137.8944313264, 57.0621039517, 95.2417416979], [107.0887246033, 81.2072380194, 95.2417412391], [107.0887246864, 81.2072378742, 95.2417414700], [70.4886154786, 99.6531887818, 95.2417420152], [58.5231241708, 53.4517309538, 95.2417418406], [137.8944313899, 57.0621040329, 95.2417421006], [142.4353176271, 86.6408558472, 95.2417407489], [107.0887245397, 81.2072379383, 95.2417408364], [107.0887245466, 81.2072378939, 95.2417408732], [142.4353176202, 86.6408558917, 95.2417407122], [105.3274804680, 141.1840648575, 95.2417408984], [105.3274804573, 141.1840648502, 95.2417408321], [142.4353176310, 86.6408558990, 95.2417407785], [159.5482040771, 156.7233798130, 95.2417410380], [142.4353176390, 86.6408558970, 95.2417408994], [207.6956343557, 99.6575416869, 95.2417410365], [159.5482040691, 156.7233798150, 95.2417409171], [142.4353176448, 86.6408558683, 95.2417409662], [144.6678453012, 56.7989720977, 95.2417409902], [207.6956343499, 99.6575417156, 95.2417409696], [241.1506259174, 157.3112538666, 95.2417424299], [159.5482039579, 156.7233797212, 95.2417418046], [207.6956344669, 99.6575417807, 95.2417401489], [253.5339921849, 124.4002690902, 95.2417405421], [241.1506258740, 157.3112538919, 95.2417405977], [207.6956345103, 99.6575417555, 95.2417419812], [241.1506258694, 157.3112538901, 95.2417405499], [253.5339921894, 124.4002690919, 95.2417405899], [341.6365413419, 163.4592236285, 95.2417403967], [341.6365413273, 163.4592238673, 95.2417399621], [290.1693845852, 187.0396463148, 95.2417401426], [241.1506258840, 157.3112536513, 95.2417409845], [290.1693845927, 187.0396463025, 95.2417411208], [248.9271917712, 239.7337148996, 95.2417420452], [241.1506258766, 157.3112536636, 95.2417400063], [248.9271916941, 239.7337148393, 95.2417416323], [290.1693846698, 187.0396463629, 95.2417415337], [299.6019371241, 245.5140894491, 95.2417425054], [290.1693844422, 187.0396460026, 95.2417404707], [341.6365414704, 163.4592241796, 95.2417396340], [343.6098693426, 183.2627141553, 95.2417391405], [341.6365402513, 163.4592243011, 95.2417398725], [416.9545946269, 195.9152429450, 95.2417372305], [343.6098705617, 183.2627140338, 95.2417389020], [416.9545949018, 195.9152423071, 95.2417381486], [341.6365399765, 163.4592249389, 95.2417389544], [437.9931959189, 165.2073531535, 95.2417385774], [352.6293895948, 210.4617733049, 95.2417377276], [343.6098705804, 183.2627139254, 95.2417375027], [416.9545946082, 195.9152430534, 95.2417386298], [352.6293894051, 210.4617724661, 95.2417371801], [416.9545947979, 195.9152438921, 95.2417391772], [388.1069322822, 247.3935170466, 95.2417386690], [341.3545022313, 255.0313621949, 95.2417387518], [352.6293893428, 210.4617725260, 95.2417381892], [388.1069323445, 247.3935169868, 95.2417376599], [341.3545022762, 255.0313624699, 95.2417385435], [388.1069322996, 247.3935167118, 95.2417378683], [323.5398209847, 305.9261254848, 95.2417391129], [207.6956343539, 99.6575420452, 95.2417412139], [260.9811053858, 87.9292159457, 95.2417405837], [253.5339923413, 124.4002688004, 95.2417413094], [207.6956343701, 99.6575421187, 95.2417411079], [215.5068761450, 37.5195720557, 95.2417394675], [260.9811053697, 87.9292158722, 95.2417406896], [260.9811054029, 87.9292158422, 95.2417393031], [215.5068761118, 37.5195720856, 95.2417408541], [253.6225386352, 29.3796493646, 95.2417407754], [159.5482041222, 156.7233796557, 95.2417412242], [82.9170772604, 176.4383810724, 95.2417410399], [105.3274804122, 141.1840650075, 95.2417406460], [105.3274803781, 141.1840649859, 95.2417411925], [82.9170772945, 176.4383810940, 95.2417404934], [47.4433861256, 161.5269645900, 95.2417400882], [76.3485113967, 106.1121868264, 95.2417410671], [105.3274803969, 141.1840650392, 95.2417408220], [47.4433861068, 161.5269645366, 95.2417404586], [149.2796997286, 205.1609730657, 95.2417407977], [82.9170772861, 176.4383811723, 95.2417407407], [159.5482040965, 156.7233795557, 95.2417415234], [231.4751841108, 195.2695909357, 95.2417400883], [149.2796997282, 205.1609730656, 95.2417415262], [159.5482040968, 156.7233795558, 95.2417407949], [61.5324835202, 128.8627198074, 95.2417406610], [107.0887247256, 81.2072378991, 95.2417405402], [105.3274802890, 141.1840648522, 95.2417412314], [116.3819539729, -58.9412001455, 95.2417403985], [181.6201077285, -1.1574528814, 95.2417387428], [168.5036507590, 35.5443267494, 95.2417401880], [-14.6088363818, 11.9224002362, 95.2417412003], [49.5263422010, 48.6541307746, 95.2417421944], [27.2167692687, 90.8445401498, 95.2417433705], [-14.6088363610, 11.9224002252, 95.2417413465], [27.2167692478, 90.8445401608, 95.2417432243], [-18.6916131184, 105.9076162166, 95.2417427906], [43.2150264881, 128.5788328261, 95.2417425696], [-18.6916130373, 105.9076164637, 95.2417430220], [27.2167691668, 90.8445399138, 95.2417429930]], triangles = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14], [15, 16, 17], [18, 19, 20], [21, 22, 23], [24, 25, 26], [27, 28, 29], [30, 31, 32], [33, 34, 35], [36, 37, 38], [39, 40, 41], [42, 43, 44], [45, 46, 47], [48, 49, 50], [51, 52, 53], [54, 55, 56], [57, 58, 59], [60, 61, 62], [63, 64, 65], [66, 67, 68], [69, 70, 71], [72, 73, 74], [75, 76, 77], [78, 79, 80], [81, 82, 83], [84, 85, 86], [87, 88, 89], [90, 91, 92], [93, 94, 95], [96, 97, 98], [99, 100, 101], [102, 103, 104], [105, 106, 107], [108, 109, 110], [111, 112, 113], [114, 115, 116], [117, 118, 119], [120, 121, 122], [123, 124, 125], [126, 127, 128], [129, 130, 131], [132, 133, 134], [135, 136, 137], [138, 139, 140], [141, 142, 143], [144, 145, 146], [147, 148, 149], [150, 151, 152], [153, 154, 155], [156, 157, 158], [159, 160, 161], [162, 163, 164], [165, 166, 167], [168, 169, 170], [171, 172, 173], [174, 175, 176], [177, 178, 179], [180, 181, 182], [183, 184, 185], [186, 187, 188], [189, 190, 191]]);
/***********************************************
******      SolidPython code:      *************
************************************************
 
#! /usr/bin/env python
# -*- coding: UTF-8 -*-
from __future__ import division
import os
import sys
import re
import tree
import utilities
from numpy import array,cross
from tree import TriangleNode, parseArrayIntoTree, parseEdgeArrayIntoTree, cutTreeIntoPatches
from stl_reader import Reader
from graph2 import Graph,TreeNode,treeLength
from utilities import getMatrixArbitraryAxis
from dxf_writer import DXFWriter
from evolution import TreeWorld

# Assumes SolidPython is in site-packages or elsewhwere in sys.path
from solid import *
from solid.utils import *

SEGMENTS = 48

triangles = Reader.read("stl/rhino-quarter.stl")
g = Graph(triangles)
hFn = lambda e: g.defaultHeuristic(e)
msp = g.toMSPTree(hFn)
edge_rep = msp.makeEdgeRepresentation()

hFn = lambda e: -g.defaultHeuristic(e)
msp2 = g.toMSPTree(hFn)
edge_rep2 = msp2.makeEdgeRepresentation()

world = TreeWorld(g, [edge_rep, edge_rep2])
child1 = world.generateFittest()
print child1
tn = parseEdgeArrayIntoTree(g.nodes, child1)
print treeLength(msp,set()), "faces"
#tn = parseArrayIntoTree(g.nodes, array_rep)
tn.unfold()
v = tn.getAllChildVertices()
v2d = tn.getAllChildVertices2D()
tn.getAllChildTriangles()
kdtree = utilities.makeKDTree(tn.getAllChildTriangles())

intersects = tn.checkIntersection() # return nodes thats intersect
print len(intersects), "faces that intersects"
paths = world.paths_intersection(child1)
cutEdges = g.cutEdges(paths)
print "Edges to cut:", cutEdges
print cutTreeIntoPatches(tn,cutEdges)

#v_i = [ x.getTransformedVertices2D() for x in intersects ]
#v = reduce(lambda x,y: x+y, v_i)

#print [x.node for x in xs]
#print len(xs)


#array_rep = [19, 55, 115, 49, -1, 147, 55, 194, 230, 180, 14, 82, 8, 198, 157, 197, 196, 81, 254, 240, 148, 120, 26, 46, 181, 123, 210, 223, 125, 143, 52, 21, 107, 16, 212, 250, 125, 73, 196, 27, 75, 249, 167, 39, 57, 103, 166, 23, 207, 15, 3, 240, 178, 191, 33, 181, 111, 29, 184, 177, 7, 92, 118, 59, 15, 93, 129, 58, 199, 94, 97, 98, 40, 61, 143, 64, 234, 251, 75, 91, 32, 78, 186, 133, 76, 134, 90, 4, 187, 218, 51, 49, 218, 182, 106, 43, 176, 138, 121, 63, 216, 151, 36, 10, 149, 146, 47, 226, 198, 133, 66, 104, 103, 46, 162, 10, 113, 251, 25, 83, 114, 62, 11, 5, 114, 206, 120, 38, 245, 185, 159, 110, 238, 1, 189, 226, 87, 154, 142, 160, 96, 54, 44, 5, 233, 68, 74, 12, 242, 253, 54, 208, 222, 211, 33, 93, 124, 155, 127, 215, 137, 127, 168, 13, 50, 173, 19, 152, 2, 24, 230, 6, 248, 115, 195, 153, 222, 232, 170, 148, 51, 173, 52, 254, 34, 253, 171, 84, 203, 205, 153, 135, 8, 197, 128, 60, 246, 141, 4, 9, 108, 3, 140, 144, 79, 117, 221, 100, 45, 158, 214, 20, 32, 22, 175, 111, 76, 18, 182, 175, 119, 85, 190, 139, 163, 99, 151, 234, 22, 63, 8, 144, 177, 144, 76, 237, 113, 193, 239, 238, 19, 162, 26, 244, 174, 140, 235, 225, 172, 41, 249, 117, 84, 77, 18, 239]
#print array_rep
#tn = parseArrayIntoTree(g.nodes, array_rep)
#tn.unfold()
#v = tn.getAllChildVertices()

def assembly():
    a = polyhedron(
            points=v,
            triangles=[[x for x in range(y,y+3)] for y in range(0,len(v),3)])
    return a

def intersecting():
    a = polygon(
            points=v2d,
            paths=[[x for x in range(y,y+3)] for y in range(0,len(v),3)])
    return a

if __name__ == '__main__':
    a = assembly()
    #a = intersecting()
    scad_render_to_file(a,'unfold.scad', file_header='$fn = %s;' % SEGMENTS, include_orig_code=True)
    d = DXFWriter(v2d) 
    d.generate_file()
 
 
***********************************************/
                            
