$fn = 48;

polyhedron(points = [[-14.6088364060, 11.9224002258, 95.2417413936], [-74.2194118880, -20.8499445172, 95.2417414959], [-43.9609988186, -58.6307821971, 95.2417413475], [-14.6088364249, 11.9224002602, 95.2417411998], [-63.2480040173, 64.0665518239, 95.2417407722], [-74.2194118691, -20.8499445516, 95.2417416897], [-74.2194114174, -20.8499446100, 95.2417412195], [-63.2480044689, 64.0665518822, 95.2417412424], [-126.6439338638, -8.7789811191, 95.2417411296], [-74.2194114155, -20.8499446014, 95.2417412126], [-126.6439338658, -8.7789811277, 95.2417411365], [-146.9677181445, -16.1713909625, 95.2417408362], [-126.6439338376, -8.7789812052, 95.2417411662], [-186.7832846336, 34.8124077124, 95.2417414850], [-146.9677181727, -16.1713908850, 95.2417408066], [-63.2480044770, 64.0665518893, 95.2417409989], [-101.7219895454, 64.7633877809, 95.2417410805], [-126.6439338557, -8.7789811262, 95.2417413731], [-126.6439338684, -8.7789811219, 95.2417412063], [-101.7219895328, 64.7633877766, 95.2417412472], [-172.9770815927, 77.0799131810, 95.2417409907], [-190.4895839904, 29.1773577576, 95.2417406018], [-126.6439338535, -8.7789811139, 95.2417410336], [-172.9770816076, 77.0799131729, 95.2417411634], [-172.9770815867, 77.0799131653, 95.2417404460], [-238.5577680487, 63.7849179709, 95.2417403475], [-190.4895840113, 29.1773577653, 95.2417413192], [-190.4895839100, 29.1773579060, 95.2417409063], [-238.5577681500, 63.7849178302, 95.2417407604], [-245.0611354524, 23.2454804135, 95.2417405928], [-273.7164483785, 23.3619308060, 95.2417377841], [-245.0611348457, 23.2454803162, 95.2417392201], [-238.5577687567, 63.7849179276, 95.2417421330], [-238.5577688122, 63.7849179758, 95.2417406237], [-288.3509822238, 36.8490600156, 95.2417397870], [-273.7164483231, 23.3619307578, 95.2417392935], [-288.3509813936, 36.8490609164, 95.2417400255], [-307.7205271912, -42.8442459339, 95.2417373835], [-273.7164491533, 23.3619298570, 95.2417390550], [-307.7205278661, -42.8442457698, 95.2417383016], [-288.3509807187, 36.8490607524, 95.2417391074], [-344.9070696018, -41.1834318831, 95.2417387304], [-372.1478659258, -18.9478815256, 95.2417389756], [-344.9070696279, -41.1834318642, 95.2417390155], [-288.3509806927, 36.8490607335, 95.2417388223], [-344.9070696310, -41.1834318680, 95.2417389677], [-372.1478659228, -18.9478815219, 95.2417390233], [-372.1113416641, -85.6051064583, 95.2417404068], [-372.1478658725, -18.9478815218, 95.2417408555], [-442.4103072337, -60.4507753925, 95.2417402302], [-372.1113417143, -85.6051064583, 95.2417385746], [-421.9996755211, -129.6448295938, 95.2417393250], [-372.1113417633, -85.6051065953, 95.2417394621], [-442.4103071847, -60.4507752555, 95.2417393427], [-481.4859321086, -101.1257394887, 95.2417392578], [-421.9996755290, -129.6448295961, 95.2417392041], [-442.4103071768, -60.4507752532, 95.2417394636], [-442.4103070588, -60.4507753665, 95.2417396498], [-518.5738537892, -81.9013006374, 95.2417394655], [-481.4859322266, -101.1257393754, 95.2417390716], [-475.6225800336, -23.7276551059, 95.2417392233], [-518.5738538172, -81.9013005381, 95.2417391664], [-442.4103070308, -60.4507754659, 95.2417399490], [-449.8325248501, -152.1000816760, 95.2417392988], [-421.9996755346, -129.6448296079, 95.2417391378], [-481.4859321029, -101.1257394770, 95.2417393241], [-411.0664964047, -157.5013872450, 95.2417405262], [-421.9996755064, -129.6448296429, 95.2417391746], [-449.8325248784, -152.1000816410, 95.2417392620], [-477.8813857936, -200.4968491831, 95.2417404972], [-411.0664964189, -157.5013873471, 95.2417401235], [-449.8325248641, -152.1000815389, 95.2417396647], [-449.8325247194, -152.1000816228, 95.2417398957], [-490.7456030178, -154.5375235318, 95.2417404408], [-477.8813859383, -200.4968490992, 95.2417402663], [-449.8325247310, -152.1000814280, 95.2417399566], [-497.6533749844, -106.7174597571, 95.2417404090], [-490.7456030062, -154.5375237266, 95.2417403799], [-548.3429111812, -222.8063702684, 95.2417387713], [-477.8813866824, -200.4968493074, 95.2417397655], [-490.7456022737, -154.5375233235, 95.2417409416], [-548.3429111632, -222.8063702836, 95.2417389175], [-490.7456022917, -154.5375233083, 95.2417407954], [-532.4203520020, -130.0898021808, 95.2417403617], [-513.1635328181, -133.7807071609, 95.2417390866], [-449.8325246979, -152.1000815815, 95.2417389658], [-481.4859322551, -101.1257395715, 95.2417396570], [-372.1478658830, -18.9478815041, 95.2417401896], [-454.6834845209, -12.4819129471, 95.2417416275], [-442.4103072232, -60.4507754102, 95.2417408962], [-288.3509808253, 36.8490609327, 95.2417383877], [-344.6982981111, 31.3824001046, 95.2417385682], [-372.1478657932, -18.9478817248, 95.2417394101], [-257.4113171412, -0.2025183413, 95.2417378806], [-273.7164492511, 23.3619299072, 95.2417376557], [-307.7205270934, -42.8442459841, 95.2417387828], [-190.4895839332, 29.1773581199, 95.2417402606], [-245.0611354291, 23.2454801996, 95.2417412384], [-231.9872536943, -2.0329360441, 95.2417413967], [-231.9872542929, -2.0329352481, 95.2417409956], [-187.9204080785, -17.9704852588, 95.2417395447], [-190.4895833346, 29.1773573239, 95.2417406616], [-232.1560586789, -30.4916112405, 95.2417401726], [-187.9204079343, -17.9704848599, 95.2417414287], [-231.9872544372, -2.0329356471, 95.2417391116], [-238.5577680682, 63.7849180669, 95.2417399346], [-172.9770815673, 77.0799130694, 95.2417408590], [-243.2017122188, 120.9255324991, 95.2417388201], [-16.8746096108, 105.9689640491, 95.2417411069], [-63.2480040033, 64.0665518369, 95.2417407523], [-14.6088364388, 11.9224002472, 95.2417412198], [-16.8746092608, 105.9689636618, 95.2417412338], [-58.1030625580, 125.2051775413, 95.2417409887], [-63.2480043533, 64.0665522242, 95.2417406254], [-58.1030625016, 125.2051775365, 95.2417413592], [-86.5948734853, 94.6550600655, 95.2417406602], [-63.2480044097, 64.0665522289, 95.2417402549], [38.9255295343, -28.8750927454, 95.2417418154], [-14.6088363780, 11.9224002142, 95.2417416042], [-43.9609988465, -58.6307821855, 95.2417411369], [-43.9609988430, -58.6307821952, 95.2417417036], [-0.5262010384, -67.3900668776, 95.2417416656], [38.9255295308, -28.8750927356, 95.2417412487], [58.4975517449, -109.6241145972, 95.2417417320], [38.9255301105, -28.8750933294, 95.2417407502], [-0.5262016181, -67.3900662838, 95.2417421641], [70.5368871530, -78.9159008313, 95.2417412091], [38.9255301071, -28.8750933302, 95.2417411325], [58.4975517484, -109.6241145964, 95.2417413498], [32.0263045712, -147.4734512895, 95.2417422126], [58.4975517645, -109.6241145698, 95.2417422396], [-0.5262016377, -67.3900663112, 95.2417416565], [32.0263045884, -147.4734513015, 95.2417421622], [82.8640214293, -157.7272841738, 95.2417431583], [58.4975517473, -109.6241145578, 95.2417422900], [38.9255295293, -28.8750927520, 95.2417416962], [49.5263421922, 48.6541307900, 95.2417416713], [-14.6088363730, 11.9224002208, 95.2417417233], [49.5263422010, 48.6541307888, 95.2417416877], [38.9255295205, -28.8750927507, 95.2417416799], [98.0557325432, -31.5169481829, 95.2417417304], [128.0356669360, 60.8658100523, 95.2417418543], [49.5263422019, 48.6541307893, 95.2417416457], [98.0557325424, -31.5169481834, 95.2417417725], [160.8013547953, 42.8006858953, 95.2417420271], [128.0356669500, 60.8658100477, 95.2417419329], [98.0557325284, -31.5169481789, 95.2417416939], [160.8013547945, 42.8006858939, 95.2417419383], [196.5775005965, 94.2031198166, 95.2417435344], [128.0356669507, 60.8658100491, 95.2417420217], [130.1230171179, 90.7181999352, 95.2417427643], [128.0356669008, 60.8658101517, 95.2417427883], [196.5775006464, 94.2031197140, 95.2417427678], [160.8013551599, 42.8006855874, 95.2417403399], [98.0557321638, -31.5169478710, 95.2417433811], [119.2527827535, -56.7879794275, 95.2417399771], [119.2527827397, -56.7879794217, 95.2417402638], [177.8273595115, 7.7410613996, 95.2417386081], [160.8013551737, 42.8006855817, 95.2417400532], [170.1591174516, -39.0063932446, 95.2417394888], [177.8273602463, 7.7410607326, 95.2417388137], [119.2527820049, -56.7879787548, 95.2417400582], [170.1591177265, -39.0063932897, 95.2417396972], [214.7360289592, -27.7604879195, 95.2417391345], [177.8273599714, 7.7410607777, 95.2417386053], [214.7360290190, -27.7604878573, 95.2417381255], [229.3243790710, 36.5552457165, 95.2417401225], [177.8273599115, 7.7410607155, 95.2417396143], [228.5178502775, 37.9515628594, 95.2417378190], [160.8013550746, 42.8006855336, 95.2417393700], [177.8273596107, 7.7410614478, 95.2417392913], [204.9905841924, 87.1792259259, 95.2417396238], [160.8013550714, 42.8006854889, 95.2417379834], [228.5178502807, 37.9515629040, 95.2417392056], [204.9905841245, 87.1792258935, 95.2417397298], [228.5178503486, 37.9515629365, 95.2417390996], [252.6935273488, 66.2558705700, 95.2417398254], [-43.9609980949, -58.6307816175, 95.2417424755], [-74.2194126117, -20.8499450968, 95.2417403679], [-112.6997805871, -82.7649374376, 95.2417407433], [-93.3255825859, -123.2285072950, 95.2417415491], [-43.9609982212, -58.6307812578, 95.2417419116], [-112.6997804609, -82.7649377973, 95.2417413072], [-13.2752834139, -90.5947240029, 95.2417414061], [-43.9609982160, -58.6307812618, 95.2417414459], [-93.3255825911, -123.2285072910, 95.2417420148], [-149.4260423946, -136.0172500094, 95.2417421616], [-93.3255824290, -123.2285072199, 95.2417418677], [-112.6997806178, -82.7649378725, 95.2417409886], [-116.3394866314, -169.7040358703, 95.2417423566], [-93.3255824075, -123.2285073145, 95.2417414774], [-149.4260424161, -136.0172499148, 95.2417425519]], triangles = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14], [15, 16, 17], [18, 19, 20], [21, 22, 23], [24, 25, 26], [27, 28, 29], [30, 31, 32], [33, 34, 35], [36, 37, 38], [39, 40, 41], [42, 43, 44], [45, 46, 47], [48, 49, 50], [51, 52, 53], [54, 55, 56], [57, 58, 59], [60, 61, 62], [63, 64, 65], [66, 67, 68], [69, 70, 71], [72, 73, 74], [75, 76, 77], [78, 79, 80], [81, 82, 83], [84, 85, 86], [87, 88, 89], [90, 91, 92], [93, 94, 95], [96, 97, 98], [99, 100, 101], [102, 103, 104], [105, 106, 107], [108, 109, 110], [111, 112, 113], [114, 115, 116], [117, 118, 119], [120, 121, 122], [123, 124, 125], [126, 127, 128], [129, 130, 131], [132, 133, 134], [135, 136, 137], [138, 139, 140], [141, 142, 143], [144, 145, 146], [147, 148, 149], [150, 151, 152], [153, 154, 155], [156, 157, 158], [159, 160, 161], [162, 163, 164], [165, 166, 167], [168, 169, 170], [171, 172, 173], [174, 175, 176], [177, 178, 179], [180, 181, 182], [183, 184, 185], [186, 187, 188], [189, 190, 191]]);
/***********************************************
******      SolidPython code:      *************
************************************************
 
#! /usr/bin/env python
# -*- coding: UTF-8 -*-
from __future__ import division
import os
import sys
import re
import tree
import utilities
from numpy import array,cross
from tree import TriangleNode, parseArrayIntoTree, parseEdgeArrayIntoTree
from stl_reader import Reader
from graph2 import Graph,TreeNode,treeLength
from utilities import getMatrixArbitraryAxis
from dxf_writer import DXFWriter
from evolution import TreeWorld

# Assumes SolidPython is in site-packages or elsewhwere in sys.path
from solid import *
from solid.utils import *

SEGMENTS = 48

triangles = Reader.read("stl/rhino-quarter.stl")
g = Graph(triangles)
hFn = lambda e: g.defaultHeuristic(e)
msp = g.toMSPTree(hFn)
edge_rep = msp.makeEdgeRepresentation()

hFn = lambda e: -g.defaultHeuristic(e)
msp2 = g.toMSPTree(hFn)
edge_rep2 = msp2.makeEdgeRepresentation()

world = TreeWorld(g, [edge_rep, edge_rep2])
child1 = world.generateFittest()
tn = parseEdgeArrayIntoTree(g.nodes, child1)
print treeLength(msp,set()), "faces"
#tn = parseArrayIntoTree(g.nodes, array_rep)
tn.unfold()
v = tn.getAllChildVertices()
v2d = tn.getAllChildVertices2D()

intersects = tn.checkIntersection() # return nodes thats intersect
print len(intersects), "faces that intersects"
#v_i = [ x.getTransformedVertices2D() for x in intersects ]
#v = reduce(lambda x,y: x+y, v_i)

#print [x.node for x in xs]
#print len(xs)


#array_rep = [19, 55, 115, 49, -1, 147, 55, 194, 230, 180, 14, 82, 8, 198, 157, 197, 196, 81, 254, 240, 148, 120, 26, 46, 181, 123, 210, 223, 125, 143, 52, 21, 107, 16, 212, 250, 125, 73, 196, 27, 75, 249, 167, 39, 57, 103, 166, 23, 207, 15, 3, 240, 178, 191, 33, 181, 111, 29, 184, 177, 7, 92, 118, 59, 15, 93, 129, 58, 199, 94, 97, 98, 40, 61, 143, 64, 234, 251, 75, 91, 32, 78, 186, 133, 76, 134, 90, 4, 187, 218, 51, 49, 218, 182, 106, 43, 176, 138, 121, 63, 216, 151, 36, 10, 149, 146, 47, 226, 198, 133, 66, 104, 103, 46, 162, 10, 113, 251, 25, 83, 114, 62, 11, 5, 114, 206, 120, 38, 245, 185, 159, 110, 238, 1, 189, 226, 87, 154, 142, 160, 96, 54, 44, 5, 233, 68, 74, 12, 242, 253, 54, 208, 222, 211, 33, 93, 124, 155, 127, 215, 137, 127, 168, 13, 50, 173, 19, 152, 2, 24, 230, 6, 248, 115, 195, 153, 222, 232, 170, 148, 51, 173, 52, 254, 34, 253, 171, 84, 203, 205, 153, 135, 8, 197, 128, 60, 246, 141, 4, 9, 108, 3, 140, 144, 79, 117, 221, 100, 45, 158, 214, 20, 32, 22, 175, 111, 76, 18, 182, 175, 119, 85, 190, 139, 163, 99, 151, 234, 22, 63, 8, 144, 177, 144, 76, 237, 113, 193, 239, 238, 19, 162, 26, 244, 174, 140, 235, 225, 172, 41, 249, 117, 84, 77, 18, 239]
#print array_rep
#tn = parseArrayIntoTree(g.nodes, array_rep)
#tn.unfold()
#v = tn.getAllChildVertices()

def assembly():
    a = polyhedron(
            points=v,
            triangles=[[x for x in range(y,y+3)] for y in range(0,len(v),3)])
    return a

def intersecting():
    a = polygon(
            points=v2d,
            paths=[[x for x in range(y,y+3)] for y in range(0,len(v),3)])
    return a

if __name__ == '__main__':
    a = assembly()
    #a = intersecting()
    scad_render_to_file(a,'unfold.scad', file_header='$fn = %s;' % SEGMENTS, include_orig_code=True)
    d = DXFWriter(v2d) 
    d.generate_file()
 
 
***********************************************/
                            
