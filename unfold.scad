$fn = 48;

polygon(paths = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14], [15, 16, 17], [18, 19, 20], [21, 22, 23], [24, 25, 26], [27, 28, 29], [30, 31, 32], [33, 34, 35], [36, 37, 38], [39, 40, 41], [42, 43, 44], [45, 46, 47], [48, 49, 50], [51, 52, 53], [54, 55, 56], [57, 58, 59], [60, 61, 62], [63, 64, 65], [66, 67, 68], [69, 70, 71], [72, 73, 74], [75, 76, 77], [78, 79, 80], [81, 82, 83], [84, 85, 86], [87, 88, 89], [90, 91, 92], [93, 94, 95], [96, 97, 98], [99, 100, 101], [102, 103, 104], [105, 106, 107], [108, 109, 110], [111, 112, 113], [114, 115, 116], [117, 118, 119], [120, 121, 122], [123, 124, 125], [126, 127, 128], [129, 130, 131], [132, 133, 134], [135, 136, 137], [138, 139, 140], [141, 142, 143], [144, 145, 146], [147, 148, 149], [150, 151, 152], [153, 154, 155], [156, 157, 158], [159, 160, 161], [162, 163, 164], [165, 166, 167], [168, 169, 170], [171, 172, 173], [174, 175, 176], [177, 178, 179], [180, 181, 182], [183, 184, 185], [186, 187, 188], [189, 190, 191]], points = [[63.0221705669, -36.4437764449], [53.2128208355, -101.6372786252], [88.4545413404, -68.5843367349], [53.2128208615, -101.6372786291], [63.0221705409, -36.4437764410], [16.6662926503, -74.5417335821], [63.0221706546, -36.4437765794], [37.0932377462, -11.8146011020], [16.6662925365, -74.5417334437], [16.6662925489, -74.5417334477], [37.0932377338, -11.8146010980], [-28.8056347948, -41.1701736546], [-28.8056346980, -41.1701735227], [2.4996697822, -113.8405856336], [16.6662924521, -74.5417335796], [-60.8291716416, -78.9343856746], [2.4996696874, -113.8405856744], [-28.8056346032, -41.1701734819], [37.0932377305, -11.8146010905], [-13.1397124283, 31.8316331715], [-28.8056347915, -41.1701736622], [-79.2101967602, 23.0067768743], [-28.8056346492, -41.1701736927], [-13.1397125706, 31.8316332020], [-79.2101967764, 23.0067768615], [-74.7375242518, -59.6608243726], [-28.8056346330, -41.1701736800], [-60.7604217278, 52.9414804861], [-79.2101967535, 23.0067768245], [-13.1397125773, 31.8316332518], [-79.2101967494, 23.0067768219], [-60.7604217320, 52.9414804886], [-145.5685138856, 98.7153660777], [-145.5685140656, 98.7153659199], [-132.7202719996, 43.5807377655], [-79.2101965694, 23.0067769797], [-132.7202719945, 43.5807377789], [-149.1546193335, -21.2844729398], [-79.2101965746, 23.0067769662], [-149.1546192386, -21.2844729638], [-132.7202720894, 43.5807378029], [-184.7384226176, 15.2550329456], [-64.0170943875, 90.0223552659], [-145.5685139009, 98.7153660493], [-60.7604217167, 52.9414805169], [-145.5685139745, 98.7153653587], [-64.0170943138, 90.0223559565], [-134.1286673164, 115.0003936530], [-178.8343752949, 144.5224268811], [-145.5685129721, 98.7153646545], [-134.1286683188, 115.0003943572], [-134.1286683593, 115.0003942959], [-137.7913928424, 143.4208975241], [-178.8343752544, 144.5224269425], [-150.8666582546, 196.7339238654], [-178.8343752379, 144.5224275567], [-137.7913928589, 143.4208969098], [-150.8666584637, 196.7339238141], [-137.7913926498, 143.4208969611], [-114.4574307251, 159.7135619455], [-114.4574314351, 159.7135612472], [-104.4691629016, 205.4970400067], [-150.8666577536, 196.7339245125], [-137.7913931153, 143.4208976277], [-102.0286351410, 114.5315129906], [-114.4574302596, 159.7135612789], [-112.9197456063, 134.2701157247], [-134.1286673533, 115.0003935494], [-64.0170942769, 90.0223560601], [-112.9197461833, 134.2701150870], [-64.0170937000, 90.0223566978], [-63.8821529918, 149.0323730560], [-100.8658021072, 178.6353474384], [-112.9197462082, 134.2701151697], [-63.8821529669, 149.0323729733], [-13.1397127107, 31.8316329508], [-36.4741802061, 81.1509768525], [-60.7604215944, 52.9414807871], [-13.1397127787, 31.8316329186], [31.2228229875, 76.0369294566], [-36.4741801381, 81.1509768847], [-36.4741801347, 81.1509769293], [31.2228229841, 76.0369294120], [14.3341305264, 111.1629046806], [37.0932377497, -11.8146010683], [59.3279423602, 8.2138815900], [-13.1397124476, 31.8316331494], [48.3001880277, 43.9675898170], [-13.1397124829, 31.8316330409], [59.3279423956, 8.2138816985], [63.2650818953, 2.6959737700], [37.0932377772, -11.8146010694], [63.0221706236, -36.4437766120], [137.6337088553, -143.1463571831], [88.4545411625, -68.5843365452], [53.2128210134, -101.6372788148], [53.2128210051, -101.6372788317], [68.9012631881, -162.1366725358], [137.6337088636, -143.1463571663], [137.6337088585, -143.1463571479], [68.9012631932, -162.1366725542], [139.1031550804, -211.1558272021], [137.6337088978, -143.1463571470], [139.1031550411, -211.1558272029], [186.5972620362, -201.8138221712], [198.5724504500, -114.5660571591], [137.6337089211, -143.1463571276], [186.5972620130, -201.8138221906], [186.5972620232, -201.8138221920], [214.4607487914, -167.3619306097], [198.5724504397, -114.5660571577], [279.2130750630, -134.5800084297], [198.5724512344, -114.5660569186], [214.4607479967, -167.3619308489], [300.5176779439, -175.5606515563], [279.2130750478, -134.5800083997], [214.4607480119, -167.3619308789], [300.5176779625, -175.5606515466], [333.1315998154, -135.2376228466], [279.2130750292, -134.5800084094], [214.4607488217, -167.3619306343], [186.5972619928, -201.8138221674], [256.8755703065, -242.6878699147], [198.5724504535, -114.5660571666], [134.7479063801, -69.2937112372], [137.6337089176, -143.1463571201], [134.7479063853, -69.2937112299], [198.5724504484, -114.5660571739], [228.2754799579, -63.3694718621], [228.2754799391, -63.3694718512], [198.5724504672, -114.5660571848], [261.0671313675, -59.8131273478], [186.5972618573, -201.8138212615], [139.1031552200, -211.1558281127], [176.1850880133, -273.9183587852], [221.0210444362, -275.4665982467], [186.5972614800, -201.8138212070], [176.1850883906, -273.9183588397], [206.3992073473, -331.1174330212], [221.0210444422, -275.4665980728], [176.1850883846, -273.9183590135], [251.5725817574, -317.3738542184], [221.0210445361, -275.4665980975], [206.3992072535, -331.1174329965], [139.1031553411, -211.1558268287], [68.9012629325, -162.1366729276], [104.1440892024, -252.0447300671], [68.9012629225, -162.1366729315], [50.4806441525, -195.9214906968], [104.1440892124, -252.0447300632], [104.1440892027, -252.0447300724], [50.4806441622, -195.9214906875], [6.5905127286, -253.3901021659], [40.9527478173, -291.0806760011], [104.1440892025, -252.0447300555], [6.5905127289, -253.3901021828], [139.1031553344, -211.1558268230], [104.1440892091, -252.0447300728], [101.2931527645, -273.4824559775], [104.1440892908, -252.0447300837], [37.6722624361, -285.1875564046], [101.2931526827, -273.4824559666], [53.2128215104, -101.6372787007], [17.0824476648, -129.2853052391], [68.9012626828, -162.1366726668], [17.0824476951, -129.2853051914], [30.9813135535, -168.6796512130], [68.9012626525, -162.1366727146], [137.6337088357, -143.1463571961], [136.1756294633, -69.2517351675], [88.4545411821, -68.5843365322], [97.6945028811, -28.6538451151], [88.4545411713, -68.5843373048], [136.1756294741, -69.2517343950], [136.1756295955, -69.2517342798], [113.8452169610, 6.9991139266], [97.6945027597, -28.6538452302], [113.8452170067, 6.9991139400], [136.1756295498, -69.2517342932], [209.3451558888, -10.6964267131], [127.4901228422, 41.8381087079], [113.8452170094, 6.9991139545], [209.3451558861, -10.6964267275], [127.4901231000, 41.8381091095], [209.3451556283, -10.6964271291], [231.6409730416, 13.6107017738], [231.6409730377, 13.6107017593], [160.0343092433, 63.2842747491], [127.4901231039, 41.8381091240], [207.3822582931, 61.7683021949], [160.0343098090, 63.2842755645], [231.6409724721, 13.6107009440]]);
/***********************************************
******      SolidPython code:      *************
************************************************
 
#! /usr/bin/env python
# -*- coding: UTF-8 -*-
from __future__ import division
import os
import sys
import re
import tree
import utilities
from numpy import array,cross
from tree import TriangleNode, parseArrayIntoTree
from stl_reader import Reader
from graph2 import Graph,TreeNode
from utilities import getMatrixArbitraryAxis, findIntersectingTriangles

# Assumes SolidPython is in site-packages or elsewhwere in sys.path
from solid import *
from solid.utils import *

SEGMENTS = 48

triangles = Reader.read("stl/rhino-quarter.stl")
g = Graph(triangles)
msp = g.toMSPTree()
array_rep = msp.makeArrayRepresentation(len(g.nodes))
tn = parseArrayIntoTree(g.nodes, array_rep)
tn.unfold()
v = tn.getAllChildVertices()
v2d = tn.getAllChildVertices2D()
#xs = tn.checkIntersection()
#print [x.node for x in xs]
#print len(xs)

def assembly():
    a = polyhedron(
            points=v,
            triangles=[[x for x in range(y,y+3)] for y in range(0,len(v),3)])
    return a

def intersecting():
    a = polygon(
            points=v2d,
            paths=[[x for x in range(y,y+3)] for y in range(0,len(v),3)])
    return a

if __name__ == '__main__':
    #a = assembly()
    a = intersecting()
    scad_render_to_file(a,'unfold.scad', file_header='$fn = %s;' % SEGMENTS, include_orig_code=True)
 
 
***********************************************/
                            
